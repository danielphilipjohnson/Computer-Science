#!/usr/bin/env python3
import re
import operator
import csv

# Initialize two dictionaries
# one for the number of different error messages
different_error_messages = {}


# another to count the number of entries for each user (splitting between INFO and ERROR).
users_log_entries_generated = {}


filename = "syslog.log"


# generates two different reports
# from this internal ticketing system log file : syslog.log.

def get_error_from_log(line):
    #m = re.search(r"ticky: ERROR ([\w* ]* [\w* \'? ]*)", line)
    m = re.search(r"ticky: ERROR ([\w* \'? \w*]*)", line)
    if m != None:
        cleaned = m.group(1).strip()
        return cleaned


def get_info_from_log(line):
    m = re.search(r"ticky: INFO ([\w ]* )", line)
    if m != None:
        cleaned = m.group(1).strip()
        return cleaned
    else:
        return None

def get_username_from_log(line):
    m = re.search(r"\((.*?)\)", line)
    if m != None:
        return m.group(1)
    
    
# create the following reports
# The ranking of errors generated by the system
def ranked_errors(log_filename):
    """ A list of all the error messages logged and how many times each error was found, sorted by the most common error to the least common error. This report doesn't take into account the users involved. """
    with open(log_filename) as f:
        for line in f:
            error = get_error_from_log(line.strip())
            if error:                
                different_error_messages[error] = different_error_messages.get(
                    error, 0) + 1
    
    
    
    sorted_errors = sorted(        
        different_error_messages.items(),         
        key=operator.itemgetter(1),      
        reverse=True)
    
    sorted_errors.insert(0,("Error", "Count"))

    with open("errors.csv", 'w') as err_csv:
       for error in sorted_errors:
           msg, count = error
           row = msg + ", " + str(count) + "\n"
           err_csv.write(row)
           




def user_usage_stats(log_filename):
    """ The user usage statistics for the service: A list of all users that have used the system, including how many info messages and how many error messages they've generated. This report is sorted by username.  """
    with open(log_filename) as f:
        for line in f:
            error = get_error_from_log(line)
            info = get_info_from_log(line)
            user = get_username_from_log(line)
            
            if user:
                # if user doesnt exist build template dictionary
                if user not in users_log_entries_generated:
                    
                    if error:
                        users_log_entries_generated[user] = {
                            "error": 1, 
                            "info": 0
                        }
                    if info:
                        users_log_entries_generated[user] = {"error": 0, "info": 1}
                # if user exists in dictionary 
                else:
                    if error:
                        users_log_entries_generated[user]["error"] += 1
                    if info:
                        users_log_entries_generated[user]["info"] += 1
        sorted_users = sorted(users_log_entries_generated.items())
        
    with open("user_statistics.csv", 'w') as stats_csv:
       fieldnames = "Username, INFO, ERROR\n"
       
       stats_csv.write(fieldnames)
       
       for user in sorted_users:
           # bug need to add space
           col1, col2_3 = user
           stats_csv.write(col1 + ", " + 
                           str(col2_3["info"]) + ", " + 
                           str(col2_3["error"])+"\n")



def main ():
    ranked_errors(filename)
    user_usage_stats(filename)

    
    
    
main()
